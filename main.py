import telebot
from telebot import types
import sqlite3
import random
import time

token = ""

bot = telebot.TeleBot(token)

moderator_id = 0

user_states = {}
last_video_time = {}

def ending_minutes(minutes):
    if minutes == 1:
        return "–º–∏–Ω—É—Ç–∞"

    elif 2 <= minutes % 10 <= 4:
        return "–º–∏–Ω—É—Ç—ã"

    elif 5 <= minutes % 10 <= 9:
        return "–º–∏–Ω—É—Ç"

def ending_hours(hours):
    if hours == 1:
        return "—á–∞—Å"

    elif 2 <= hours % 10 <= 4:
        return "—á–∞—Å–∞"

    elif 5 <= hours % 10 <= 9:
        return "—á–∞—Å–æ–≤"

def main():
    markup = types.InlineKeyboardMarkup()
    btn_video = types.InlineKeyboardButton(
        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ. üì∏", callback_data="video_result"
    )
    btn_info = types.InlineKeyboardButton("–ò–Ω—Ñ–æ", callback_data="info")
    markup.add(btn_video, btn_info)
    return markup


def main_with_back():
    markup = types.InlineKeyboardMarkup()
    btn_video = types.InlineKeyboardButton(
        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ. üì∏", callback_data="video_result"
    )
    btn_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")
    markup.add(btn_video, btn_back)
    return markup


@bot.message_handler(commands=["start"])
def welcome(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –¥–∞—Ç—å —Ç–µ–±–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—ã–±—Ä–æ—à–µ–Ω–Ω—ã–π –º—É—Å–æ—Ä üåç\n",
        reply_markup=main(),
    )


@bot.callback_query_handler(func=lambda call: True)
def buttons_check(call):
    if call.data == "video_result":
        user_id = call.message.chat.id
        current_time = time.time()
        last_time = last_video_time.get(user_id)

        if last_time and current_time - last_time < 86400:
            remaining_time = 86400 - (current_time - last_time)
            hours = int(remaining_time // 3600)
            minutes = int((remaining_time % 3600) // 60)
            bot.send_message(
                user_id,
                f"–¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –Ω–µ–¥–∞–≤–Ω–æ –≤–∏–¥–µ–æ. –ü–æ–¥–æ–∂–¥–∏ {hours} {ending_hours(hours)} –∏ {minutes} {ending_minutes(minutes)}. ‚åö"
            )

        else:
            user_states[user_id] = "awaiting_video"
            bot.send_message(
                user_id,
                "–û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ –∫–∞–∫ —Ç—ã —É—Ç–∏–ª–∏–∑–∏—Ä—É–µ—à—å –ª—é–±–æ–π –º—É—Å–æ—Ä. üóëÔ∏è",
            )


    elif call.data == "info":
        bot.send_message(
            call.message.chat.id,
            f"""–£—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã: üå±
–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ –±–æ—Ç–∞, —Å —Ç–µ–º –∫–∞–∫ –≤—ã —É—Ç–∏–ª–∏–∑–∏—Ä—É–µ—Ç–µ –º—É—Å–æ—Ä.
–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∏–¥–µ–æ, –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ.\n
–ü–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –Ω–∞ 2024 –≥–æ–¥, –ø–æ—á—Ç–∏ 48% –ª—é–¥–µ–π –ø—Ä–∏–∑–Ω–∞—é—Ç—Å—è, —á—Ç–æ –±—Ä–æ—Å–∞—é—Ç –º—É—Å–æ—Ä.
–ò–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–π –ø—Ä–∏—á–∏–Ω–µ –º—ã —Ö–æ—Ç–∏–º –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –º–∏—Ä–∞ –æ—Ç –º—É—Å–æ—Ä–∞ –Ω–∞ —É–ª–∏—Ü–∞—Ö.
–ë–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π –¥–∞—ë—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é –ª—é–¥—è–º, –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –º—É—Å–æ—Ä –∏–º–µ–Ω–Ω–æ –≤ –æ—Ç–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞.
–ú–æ—Ç–∏–≤–∞—Ü–∏—è –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø–æ–æ—â—Ä–µ–Ω–∏–∏ –ª—é–¥–µ–π –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã, –∑–∞ –≤–∏–¥–µ–æ–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤—ã–±—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞ –≤ –º—É—Å–æ—Ä–∫—É. üéá\n
–í—Å–µ–≥–æ 4 –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–∏–¥–∞ –º—É—Å–æ—Ä–∞ ‚ôªÔ∏è:
1. –ü–ª–∞—Å—Ç–∏–∫ –º–æ–∂–Ω–æ —Å–¥–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –ø—É–Ω–∫—Ç –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ.
2. –°—Ç–µ–∫–ª–æ –º–æ–∂–Ω–æ —Å–¥–∞—Ç—å –≤ –ø—É–Ω–∫—Ç—ã –ø—Ä–∏—ë–º–∞ —Å—Ç–µ–∫–ª–æ—Ç–∞—Ä—ã –∏–ª–∏ –≤—ã–±—Ä–æ—Å–∏—Ç—å –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã.
3. –ú–µ—Ç–∞–ª–ª –ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –ø—É–Ω–∫—Ç–∞—Ö –ø—Ä–∏—ë–º–∞. –ù–µ –∑–∞–±—É–¥—å –æ—á–∏—Å—Ç–∏—Ç—å –º–µ—Ç–∞–ª–ª –æ—Ç –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–¥ —Å–¥–∞—á–µ–π!
4. –ë—É–º–∞–≥—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å. –õ—É—á—à–µ –≤—Å–µ–≥–æ —Å–¥–∞—Ç—å –º–∞–∫—É–ª–∞—Ç—É—Ä—É –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏—ë–º–Ω—ã–µ –ø—É–Ω–∫—Ç—ã.
            """,
            reply_markup=main_with_back(),
        )

    elif call.data == "back":
        bot.send_message(
            call.message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é! ‚ú®", reply_markup=main()
        )

    elif call.data.startswith("moderation:"):
        data = call.data.split(":")
        action = data[1]
        sender_id = int(data[2])

        db = sqlite3.connect("promo_codes.db")
        cur = db.cursor()

        promo_services = ['Wildberries', 'Ozon', 'DodoPizza', 'BurgerKing', "McDonald's"]
        random_service = random.choice(promo_services)

        cur.execute("SELECT code FROM promo_codes")
        codes = cur.fetchall()

        if codes:
            random_code = random.choice(codes)[0]
            cur.execute("DELETE FROM promo_codes WHERE code = ?", (random_code,))
            db.commit()

        else:
            bot.send_message(sender_id, "–ò–∑–≤–∏–Ω–∏, –ø—Ä–æ–º–æ–∫–æ–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üò¢", reply_markup=main())

        cur.close()
        db.close()


        if action == "accept":
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            bot.send_message(sender_id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –º—É—Å–æ—Ä. –í–æ—Ç –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ {random_service}: {random_code} üå±")
            bot.send_message(
                sender_id,
                "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –¥–∞—Ç—å —Ç–µ–±–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—ã–±—Ä–æ—à–µ–Ω–Ω—ã–π –º—É—Å–æ—Ä üåç\n",
                reply_markup=main(),
            )

        elif action == "reject":
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            bot.send_message(sender_id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –º—É—Å–æ—Ä. ‚ùå")
            bot.send_message(
                sender_id,
                "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –¥–∞—Ç—å —Ç–µ–±–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—ã–±—Ä–æ—à–µ–Ω–Ω—ã–π –º—É—Å–æ—Ä üåç\n",
                reply_markup=main(),
            )

@bot.message_handler(content_types=["video"])
def handle_video(message):
    username = message.from_user.username
    user_id = message.from_user.id

    if user_states.get(message.chat.id) == "awaiting_video":
        bot.send_message(
            user_id,
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∏–¥–µ–æ! –¢—ã –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—à—å –º—É—Å–æ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. üéâ",
        )
        bot.send_message(
            user_id,
            "–ü–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –≤—Ä—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞. üå±",
        )
        bot.send_message(
            user_id,
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –¥–∞—Ç—å —Ç–µ–±–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—ã–±—Ä–æ—à–µ–Ω–Ω—ã–π –º—É—Å–æ—Ä üåç\n",
            reply_markup=main(),
        )

        markup = types.InlineKeyboardMarkup()
        btn_accept = types.InlineKeyboardButton("‚úÖ", callback_data=f"moderation:accept:{user_id}")
        btn_reject = types.InlineKeyboardButton("‚ùå", callback_data=f"moderation:reject:{user_id}")
        markup.add(btn_accept, btn_reject)

        bot.forward_message(moderator_id, message.chat.id, message.message_id)
        bot.send_message(moderator_id, f"–í–∏–¥–µ–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username}", reply_markup=markup)

        user_states[user_id] = None
        last_video_time[user_id] = time.time()

    else:
        bot.send_message(
            message.chat.id, "–ù–∞–∂–º–∏ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É', —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ."
        )
        bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –¥–∞—Ç—å —Ç–µ–±–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤—ã–±—Ä–æ—à–µ–Ω–Ω—ã–π –º—É—Å–æ—Ä üåç\n",
            reply_markup=main(),
        )

bot.polling(none_stop=True)
